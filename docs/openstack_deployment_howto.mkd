# Installing OpenStack cloud on VMWare ESX VMs

## Requirements

- 2GB RAM minimum
- Public VLAN (SAP network with DHCP support), any other network with internet access.
- Private VLAN without DHCP (static ips for ~20+ physica/virtual hosts).
- Each VM with 2 NICs, one for each VLAN. eth0 will be used for internet connection and internal connection, 
  the 2nd NIC will be used for intra-cloud communication of new VMs deployed in the cloud.

configuration example:
in this guide, eth0 is configured to use SAP's DHCP service and eth1 is a NIC on a private VLAN utilizing ips 192.168.100.*
where the first host (management) has 192.168.100.101, additional compute hosts utilize 192.168.100.102/103 and so on.
For new VMs created in the cloud (called: floating IPs) which are assigned a new IP I utilized 192.168.100.128+.
Internal IPs of new VMs are assigned automatically by OpenStack (10.0.0.0/20)
Access to new VMs can only be done via the hosts which are connected to the private VLAN. 

## Installing the management host
- Create VMs as desired
- Add 2 NIC for each VM:
    NIC 1: regular NIC with DHCP on VLAN 'VM network'
    NIC 2: regular NIC without DHCP on VLAN 'IL Desktops' (or any other different private VLAN)
- Install ubuntu server (tested on 12.04), with Openssh and Virtual host support (mark X at those 2 packages)
- update the machine:
```
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
```
- Install git:
```
sudo apt-get install git
```

configure eth0 to use dhcp for internet access, eth1 for private VLAN purposed for communication between OS hosts.
  There are 2 types of hosts in the private VLAN, for OpenStack mgmt and hosts running OS components, and for newly
  deployed VMs in the new cloud. Best practice: use the first addresses in the VLAN for physical hosts, the rest for floating
  IPs dedicated for VM deployments.

- edit network configuration:
```
vi /etc/network/interfaces
```

- enter the following:
```
auto eth0
iface eth0 inet dhcp <br>
auto eth1
iface eth1 inet static
        address 192.168.100.101
        netmask 255.255.255.0
```
- prepare host for devstack installation:
```
useradd -U -G sudo -s /bin/bash -m stack
echo "stack ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
su - stack
```
- get devstack git:
```
git clone http://github.com/openstack-dev/devstack.git
```
- prepare devstack:
```
cd devstack
vi localrc
```
- enter the following:
```
HOST_IP=192.168.100.101
FLAT_INTERFACE=eth1
FIXED_RANGE=10.0.0.0/20
FIXED_NETWORK_SIZE=4096
FLOATING_RANGE=192.168.100.128/25
MULTI_HOST=1
LOGFILE=/opt/stack/logs/stack.sh.log
ADMIN_PASSWORD=<your_pass>
MYSQL_PASSWORD=<your_pass>
RABBIT_PASSWORD=<your_pass>
SERVICE_PASSWORD=<your_pass>
SERVICE_TOKEN=<your_pass>
```
- continue with:
```
vi local.sh
```
- add to the end of the file:
```
for i in `seq 2 10`; do /opt/stack/nova/bin/nova-manage fixed reserve 10.0.0.$i; done
```
- get customized stackrc file (with heca-nova repository):
```
wget --no-check-certificate https://raw.github.com/hecatonchire/heca-misc/master/openstack/stackrc 
```
- Start devstack installation:
```
./stack.sh
```
- wait for complete install, successful install = script reports dashboard and/or auth URLs and/or okay message.
- access horizon at: `http://serverip/ with admin/<your_pass>`
- change `apache2` default ports:
```
vi /etc/apache2/ports.conf
```
change port 80 to 1080
```
vi /etc/apache2/sites-enabled/horizon
```
change virtualhost port from 80 to 1080
- restart apache:
```
service apache2 restart
```

## Installing a compute host
- Install OS as above and configure network according to proper IP configuration of the host.
- edit network configuration:
```
vi /etc/network/interfaces
```
- enter the following:
```
auto eth0
iface eth0 inet dhcp
auto eth1
iface eth1 inet static
        address 192.168.100.<host ip> 102/103/...
        netmask 255.255.255.0
```

- prepare host for devstack installation:
```
useradd -U -G sudo -s /bin/bash -m stack
echo "stack ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
su - stack
```
- get devstack git:
```
git clone http://github.com/openstack-dev/devstack.git
```
- prepare devstack:
```
cd devstack
vi localrc
```
- enter the following:
```
HOST_IP=192.168.100.102 # change IP according to compute node
FLAT_INTERFACE=eth1
FIXED_RANGE=10.0.0.0/20
FIXED_NETWORK_SIZE=4096
FLOATING_RANGE=192.168.100.128/25
MULTI_HOST=True
LOGFILE=/opt/stack/logs/stack.sh.log
ADMIN_PASSWORD=<your_pass>
MYSQL_PASSWORD=<your_pass>
RABBIT_PASSWORD=<your_pass>
SERVICE_PASSWORD=<your_pass>
SERVICE_TOKEN=<your_pass>
MYSQL_HOST=192.168.100.101 #master node ip
RABBIT_HOST=192.168.100.101 #master node ip
GLANCE_HOSTPORT=192.168.100.101:9292 #master node ip
ENABLED_SERVICES=n-cpu,n-net,n-api,n-vol
```
- get customized stackrc file (with heca-nova repository):
```
wget --no-check-certificate https://raw.github.com/hecatonchire/heca-misc/master/openstack/stackrc 
```
- Start devstack installation:
```
./stack.sh
```
- wait for complete and successful install just as above.
- configure /etc/nova/nova.conf, specify the sql db connection running on the management node, edit the file and under `[DEFAULT]` add:
```
sql_connection=mysql://<root_user>:<os_root_pass>@<mgmt_node_internal_ip>/nova?charset=utf8
```

## AUX
- date must be synced on all hosts of the cloud, either via ntpd of whatever:

```
sudo date -s "$(wget -S  "http://www.google.com/" 2>&1 | grep -E '^[[:space:]]*[dD]ate:' | sed 's/^[[:space:]]*[dD]ate:[[:space:]]*//' | head -1l | awk '{print $1, $3, $2,  $5 ,"GMT", $4 }' | sed 's/,//')"
```
- Checking which services are running in the cloud:
```
nova-manage service list
```
services should be enabled, with state ':-)'
if state = XXX, some connectivity error exists, try to sync the clocks of the hosts or restart the services.
Use `nova-manage` for additional management commands/stats.
- deploy a VM on specific host using availability zones:

  avaiability zones and host names get be obtained via:
```
nova-manage service list
```
  add additional flags to limit the instance deployment onto specific host by:
```
nova --os-username admin --os-password <your_pass> --os-tenant-name admin --os-auth-url http://localhost:5000/v2.0 boot --image <image_id> --flavor 1 --availability-zone <zone>:<host> my-first-server
```

